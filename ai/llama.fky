#
  Copyright (C) 2023 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License, version 2, or
  (at your option) under the terms of the GNU Lesser General Public License,
  version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Lesser (Library) General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files LGPLv2.txt and LGLPv3.txt or
  http://www.gnu.org/licenses/lgpl-2.0.html
  http://www.gnu.org/licenses/lgpl-3.0.html
  or print to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

<namespace ai>

$ai::get_tokens:
  $json
    to_json
      insert_order_table
	"model" = "dummy"
  open_tcp_socket! $fd "127.0.0.1" 8080
  print_to! fd "
    POST /get_tokens HTTP/1.1@cr;
    Content-Type: application/json@cr;
    Content-Length: @(length_of(json))@cr;
    Connection: close@cr;
    @cr;
    @(json)
  load! $result fd
  behind &result "@cr;@nl;@cr;@nl;"
  from_utf8 &result
  -> result.from_json("tokens")

$ai::evaluate: (prompt)
  $do_return_confidence_values result_count() == 2
  $use_tokens not(prompt.is_a_string)
  $PROMPT
    if
      use_tokens
      -> "tokens"
      -> "prompt"
  $json
    to_json
      insert_order_table
	PROMPT = prompt
	"logits" = true # also disables server side token selection
	"brief" = true
	"n_probs" = 10
	"n_predict" = 1
  to_utf8 &json
  open_tcp_socket! $fd "127.0.0.1" 8080
  print_to! fd "
    POST /completion HTTP/1.1@cr;
    Content-Type: application/json@cr;
    Content-Length: @(length_of(json))@cr;
    Connection: close@cr;
    @cr;
    @(json)
  load! $result fd
  behind &result "@cr;@nl;@cr;@nl;"
  $info result.from_json
  if
    do_return_confidence_values:
      $logits info("logits")
      map &logits: (logit) tuple logit(1) logit(2)
      if
	use_tokens
	-> info("token") logits
	-> info("content") logits
    :
      if
	use_tokens
	-> info("token")
	-> info("content")

$ai::tokenize: (prompt)
  $json
    to_json
      insert_order_table
	"content" = prompt
  to_utf8 &json
  open_tcp_socket! $fd "127.0.0.1" 8080
  print_to! fd "
    POST /tokenize HTTP/1.1@cr;
    Content-Type: application/json@cr;
    Content-Length: @(length_of(json))@cr;
    Connection: close@cr;
    @cr;
    @(json)
  load! $result fd
  behind &result "@cr;@nl;@cr;@nl;"
  $info result.from_json
  -> info("tokens")

$ai::detokenize: (tokens)
  $json
    to_json
      insert_order_table
	"tokens" = tokens
  open_tcp_socket! $fd "127.0.0.1" 8080
  print_to! fd "
    POST /detokenize HTTP/1.1@cr;
    Content-Type: application/json@cr;
    Content-Length: @(length_of(json))@cr;
    Connection: close@cr;
    @cr;
    @(json)
  load! $result fd
  behind &result "@cr;@nl;@cr;@nl;"
  $info result.from_json
  -> info("content").from_utf8

