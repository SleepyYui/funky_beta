#
  Copyright (C) 2021 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2, or
  (at your option) version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files GPLv2.txt and GLPv3.txt or
  http://www.gnu.org/licenses/gpl-2.0.html
  http://www.gnu.org/licenses/gpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

OBJECT std::program_name -> std_types::octet_string
  #
    the name of the application program

    See also: command_line_arguments

  0, 0, NULL

OBJECT std::command_line_arguments -> std_types::list
  #
    the application's command line arguments

    **Attention**: The first argument is **really** the first **argument**.

    The name of the application program is stored in <program_name>.

    See also: program_name
  0, 0,  NULL

OBJECT std::environment_variables -> std_types::list
  #
    the application's environment variables

    See also: program_name, command_line_arguments
  0, 0,  NULL

CODE
  extern char **environ;

FUNCTION void initialize_environment
  (
    void
  )
  {
    memcpy(
      VAR(std::program_name), from_c_string(main_argv[0]),
      sizeof(std::program_name));
    NODE *args = create_list(main_argc-1);
    int i;
    for (i = 1; i < main_argc; ++i) {
      set_list_item(args, i-1, from_c_string(main_argv[i]));
    }
    memcpy(
      VAR(std::command_line_arguments), args,
      sizeof(std::command_line_arguments));
    char **p = environ;
    while (*p++);
    int n = p-environ-1;
    NODE *env_vars = create_list(n);
    for (i = 0; i < n; ++i) {
      set_list_item(env_vars, i, from_c_string(environ[i]));
    }
    memcpy(
      VAR(std::environment_variables), env_vars,
      sizeof(std::environment_variables));
  }
