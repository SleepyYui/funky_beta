#
  Copyright (C) 2021 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2, or
  (at your option) version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files GPLv2.txt and GLPv3.txt or
  http://www.gnu.org/licenses/gpl-2.0.html
  http://www.gnu.org/licenses/gpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

TYPE std_types::function -> std_types::object
  #
    the prototype object for all functions

METHOD std_types::function/_type
  {
    RUNTIME_ERROR("Attempt to call the function protoype object!")
  }

TYPE tabular_function -> std_types::function

METHOD tabular_function/_type
  {
    RUNTIME_ERROR("Attempt to call the tabular function protoype object!")
  }

METHOD std_types::function/parameter_count_of
  #
    the number of arguments to supply in calls to this function
  {
    CHECK_ARGUMENTS(1)
    CHECK_RESULTS(1)
    int par_count =
      ((const TAB_NUM *)((unsigned long)ARGUMENTS(0)->type & -4L))[1];
    if (par_count < 0)
      RETURN_UNDEFINED
    else
      RETURN_SINGLE_RESULT(from_uint32(par_count))
  }

METHOD long std_types::function/_debug_string
  (
    NODE *node,
    int indent,
    int max_depth,
    char *buf
  )
  {
    return debug_print(indent, buf, "<tabular function>");
  }

FUNCTION NODE *create_function
  (
    const TAB_NUM *code
  )
  {
    NODE *node = CREATE(tabular_function);
    node->type = (FUNC)((unsigned long)code|TABULAR_FUNCTION_TAG);
    return node;
  }
