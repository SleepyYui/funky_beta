#
  Copyright (C) 2020 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2, or
  (at your option) version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files GPLv2.txt and GLPv3.txt or
  http://www.gnu.org/licenses/gpl-2.0.html
  http://www.gnu.org/licenses/gpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

OBJECT std::EXIT_SUCCESS -> std_types::positive_integer
  #
    the empty string
  EXIT_SUCCESS

OBJECT std::EXIT_FAILURE -> std_types::positive_integer
  #
    the empty string
  EXIT_FAILURE

FUNCTION std::pass
  #
    does nothing

    <pass> must be called without any arguments expecting no results

    See also: let
  {
    CHECK_ARGUMENTS(0)
    CHECK_RESULTS(0)
    RETURN
  }

FUNCTION std::let
  #
    returns all supplied arguments as results

    See also: pass
  {
    RETURN
  }

FUNCTION std::result_count
  #
    returns the expected number of results

    When a function is called then the caller supplies the number of expected
    results as an invisible argument.

    See also: parameter_count_of
  {
    CHECK_ARGUMENTS(0)
    CHECK_RESULTS(1)
    RETURN_SINGLE_RESULT(from_int(*TLS_frame->link->code))
  }
